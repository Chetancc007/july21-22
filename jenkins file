pipeline {

agent any

options {

    skipDefaultCheckout()
    disableConcurrentBuilds()
    disableResume()
    }
    

parameters {

    string(name: 'imagename', defaultValue: '1.0', description: 'tagname')
    string(name: 'version', defaultValue: '1.0', description: 'tagname')
}



stages{

    // checkout stage //
    stage('GIT Pull'){
        steps{
            checkout scm
        }
    }
    
    stage('Enabling maintainence mode'){
        steps{
            sh '/var/lib/jenkins/workspace/project-community-edition'
            //sh 'php ./bin/magento maintenance:enable || true'
            sh ' php maintenance:enable || true'
        }
    }

    stage('Checkout Source Code from Master Branch'){
        steps{
            checkout scm
        }
    }

    stage("composer install"){

        steps{
           // sh 'apt get update'
            sh '/var/lib/jenkins/workspace/project-community-edition'
            sh 'composer install'
        }
    } 

    stage(' Setup Upgrade'){

        steps{
            sh '/var/lib/jenkins/workspace/project-community-edition'
            sh 'composer update'
            sh 'php /var/lib/jenkins/workspace/project-community-edition setup:upgrade'
        }
    }

    stage(' Di Compile'){

        steps{
           
            sh 'php /var/lib/jenkins/workspace/project-community-edition setup:di:compile'
            
        }
    }

    stage(' Static Content Deploy'){

        steps{
            
            sh 'php /var/lib/jenkins/workspace/project-community-edition setup:static-content:deploy'
            
        }
    }

    stage(' Cache Flush'){

        steps{
            
            sh 'php /var/lib/jenkins/workspace/project-community-edition clean:flush'
            
        }
    }

    stage(' Disabiling maintenance mode'){

        steps{
            
            sh 'php /var/lib/jenkins/workspace/project-community-edition maintenance:disable'
            
        }
    }
    

}
}
